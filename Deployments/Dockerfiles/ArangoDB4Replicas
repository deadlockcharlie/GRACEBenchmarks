services:
  # --- SITE A ---
  agent1:
    image: arangodb:3.11
    container_name: agent1
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8531
              --agency.activate true
              --agency.my-address tcp://agent1:8531
              --agency.size 1
              --agency.supervision true
              --log.output -
    networks:
      - arango-net

  agent1-netem:
    image: gaiadocker/iproute2
    container_name: agent1-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:agent1"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - agent1

  dbserver1:
    image: arangodb:3.11
    container_name: dbserver1
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8530
              --cluster.my-role DBSERVER
              --cluster.my-address tcp://dbserver1:8530
              --cluster.agency-endpoint tcp://agent1:8531
              --log.output -
    networks:
      - arango-net

  dbserver1-netem:
    image: gaiadocker/iproute2
    container_name: dbserver1-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:dbserver1"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - dbserver1

  # --- SITE B ---

  dbserver2:
    image: arangodb:3.11
    container_name: dbserver2
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8530
              --cluster.my-role DBSERVER
              --cluster.my-address tcp://dbserver2:8530
              --cluster.agency-endpoint tcp://agent1:8531
              --log.output -
    networks:
      - arango-net

  dbserver2-netem:
    image: gaiadocker/iproute2
    container_name: dbserver2-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:dbserver2"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - dbserver2

  # --- SITE C ---
  dbserver3:
    image: arangodb:3.11
    container_name: dbserver3
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8530
              --cluster.my-role DBSERVER
              --cluster.my-address tcp://dbserver3:8530
              --cluster.agency-endpoint tcp://agent1:8531
              --log.output -
    networks:
      - arango-net

  dbserver3-netem:
    image: gaiadocker/iproute2
    container_name: dbserver3-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:dbserver3"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - dbserver3


  # --- Site D ---
  dbserver4:
    image: arangodb:3.11
    container_name: dbserver4
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8530
              --cluster.my-role DBSERVER
              --cluster.my-address tcp://dbserver4:8530
              --cluster.agency-endpoint tcp://agent1:8531
              --log.output -
    networks:
      - arango-net

  dbserver4-netem:
    image: gaiadocker/iproute2
    container_name: dbserver4-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:dbserver4"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - dbserver4

  coordinator1:
    image: arangodb:3.11
    container_name: coordinator1
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8529
              --cluster.my-role COORDINATOR
              --cluster.my-address tcp://coordinator1:8529
              --cluster.agency-endpoint tcp://agent1:8531
              --log.output -
    ports:
      - "8529:8529"
    networks:
      - arango-net

networks:
  arango-net:
    driver: bridge
