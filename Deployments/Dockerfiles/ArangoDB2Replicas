services:
  # --- SITE A ---
  agent1:
    image: arangodb:3.11
    container_name: agent1
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8531
              --agency.activate true
              --agency.my-address tcp://agent1:8531
              --agency.endpoint tcp://agent1:8531
              --agency.endpoint tcp://agent2:8531
              --agency.endpoint tcp://agent3:8531
              --agency.size 3
              --agency.supervision true
              --log.output -
    networks:
      - arango-net

  agent1-netem:
    image: gaiadocker/iproute2
    container_name: agent1-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:agent1"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - agent1

  dbserver1:
    image: arangodb:3.11
    container_name: dbserver1
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8530
              --cluster.my-role DBSERVER
              --cluster.my-address tcp://dbserver1:8530
              --cluster.agency-endpoint tcp://agent1:8531
              --cluster.agency-endpoint tcp://agent2:8531
              --cluster.agency-endpoint tcp://agent3:8531
              --log.output -
    networks:
      - arango-net

  dbserver1-netem:
    image: gaiadocker/iproute2
    container_name: dbserver1-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:dbserver1"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - dbserver1

  # --- SITE B ---
  agent2:
    image: arangodb:3.11
    container_name: agent2
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8531
              --agency.activate true
              --agency.my-address tcp://agent2:8531
              --agency.endpoint tcp://agent1:8531
              --agency.endpoint tcp://agent2:8531
              --agency.endpoint tcp://agent3:8531
              --agency.size 3
              --agency.supervision true
              --log.output -
    networks:
      - arango-net

  agent2-netem:
    image: gaiadocker/iproute2
    container_name: agent2-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:agent2"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - agent2

  dbserver2:
    image: arangodb:3.11
    container_name: dbserver2
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8530
              --cluster.my-role DBSERVER
              --cluster.my-address tcp://dbserver2:8530
              --cluster.agency-endpoint tcp://agent1:8531
              --cluster.agency-endpoint tcp://agent2:8531
              --cluster.agency-endpoint tcp://agent3:8531
              --log.output -
    networks:
      - arango-net

  dbserver2-netem:
    image: gaiadocker/iproute2
    container_name: dbserver2-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:dbserver2"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - dbserver2

  # --- SITE C ---
  agent3:
    image: arangodb:3.11
    container_name: agent3
    environment:
      - ARANGO_NO_AUTH=1
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8531
              --agency.activate true
              --agency.my-address tcp://agent3:8531
              --agency.endpoint tcp://agent1:8531
              --agency.endpoint tcp://agent2:8531
              --agency.endpoint tcp://agent3:8531
              --agency.size 3
              --agency.supervision true
              --log.output -
    networks:
      - arango-net

  agent3-netem:
    image: gaiadocker/iproute2
    container_name: agent3-netem
    cap_add:
      - NET_ADMIN
    network_mode: "service:agent3"
    volumes:
      - ../setup-latency.sh:/usr/local/bin/setup-latency.sh
    entrypoint: ["/bin/sh", "-c", "sleep 9999999"]
    depends_on:
      - agent3

  coordinator1:
    image: arangodb:3.11
    container_name: coordinator1
    environment:
      - ARANGO_NO_AUTH=1
      - ARANGO_DEFAULT_REPLICATION_FACTOR=2
      - ARANGO_MIN_REPLICATION_FACTOR=2
    volumes:
      - ../../PreloadData:/var/lib/arangodb/import
    command: >
      arangod --server.endpoint tcp://0.0.0.0:8529
              --cluster.my-role COORDINATOR
              --cluster.my-address tcp://coordinator1:8529
              --cluster.agency-endpoint tcp://agent1:8531
              --cluster.agency-endpoint tcp://agent2:8531
              --cluster.agency-endpoint tcp://agent3:8531
              --log.output -
    healthcheck:
      test: ["CMD-SHELL", "echo 'RETURN 0;' | arangosh || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10

    ports:
      - "8529:8529"
    networks:
      - arango-net


  preload1:
    image: arangodb:latest
    container_name: preload1
    depends_on:
      coordinator1:
       condition: service_healthy
    volumes:
      - ../../PreloadData:/var/lib/arangodb/import
    entrypoint:
      [
        "sh", "/var/lib/arangodb/import/arangoDBImport.sh", "tcp://coordinator1:8529"
      ]
    networks:
      - arango-net


networks:
  arango-net:
    driver: bridge
